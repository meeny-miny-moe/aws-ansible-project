- name: Target ec2 
  ec2_launch_template:
    name: project1-launch-template                    # 시작 템플릿 이름
    image_id: "ami-0e017d4797c3df570"                        # 사용할 AMI ID (미리 만들어져 있어야 함)
    instance_type: t2.micro                           # 인스턴스 타입
    key_name: "{{ key_name }}"                            # SSH 접속용 키페어 이름
    # iam_instance_profile: "project1-code-deploy-ec2-role"  # EC2에 부여할 IAM 역할
    #iam_instance_profile: "arn:aws:iam::491085389788:instance-profile/project1-code-deploy-ec2-role"
    iam_instance_profile: "{{ aws_instance_profile_arn }}"
    
    security_group_ids:                               # 보안 그룹 목록
      - "{{ sg_ssh_id }}"
      - "{{ sg_http_id }}"
      - "{{ sg_jenkins_id }}"
    region: "{{ region }}"                        # AWS 리전 (서울)
    aws_access_key: "{{ aws_access_key }}"                # AWS 액세스 키
    aws_secret_key: "{{ aws_secret_key }}"                # AWS 시크릿 키
    block_device_mappings:                            # 루트 디바이스 설정
      - device_name: /dev/sda1
        ebs:
          volume_size: 30
          volume_type: gp2

    # tags:   # AWS API가 이 형식만 허용한다고 함
    #   - key: Name
    #     value: project1-auto-scaling-group
    #     propagate_at_launch: true
    tags:
      Name: project1-auto-scaling-group
      
    state: "{{ 'present' if target == 'create' else 'absent' }}"

  register: launch_template

# template id, name 저장
- name: Save Launch Template ID and Name
  blockinfile:
    path: ./aws_vars.yml
    block: |
      lt_id: "{{ launch_template.template.launch_template_id }}"
      lt_name: "{{ launch_template.template.launch_template_name }}"
    marker: ""
  when: launch_template.template.launch_template_id is defined
